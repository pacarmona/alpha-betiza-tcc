// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                      String   @id @default(uuid())
  created_at              DateTime @default(now())
  updated_at              DateTime @updatedAt
  name                    String
  email                   String
  birthday                String
  phone                   String
  password                String
  educational_institution String
  office                  String
  lessons                 Lesson[]
}

model Lesson {
  id         String     @id @default(uuid())
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  title      String
  User       User?      @relation(fields: [userId], references: [id])
  userId     String?
  questions  Question[]
}

model Question {
  id          String       @id @default(uuid())
  created_at  DateTime     @default(now())
  updated_at  DateTime     @updatedAt
  title       String
  answer_type AnswerType
  description String
  type        QuestionType
  Lesson      Lesson       @relation(fields: [lessonId], references: [id])
  lessonId    String
  Answers     Answer[]
}

model Answer {
  id         String       @id @default(uuid())
  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt
  text       String
  type       QuestionType
  is_correct Boolean
  Question   Question     @relation(fields: [questionId], references: [id])
  questionId String
}

enum QuestionType {
  TEXTUAL
  AUDIO
  VISUAL
}

enum AnswerType {
  TEXTUAL
  AUDIO
  VISUAL
}
